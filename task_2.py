"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def even_odd(number,  count_of_even = 0,  count_of_odd = 0):
    if not number:
        return (f'Количество четных цифр - {count_of_even}, нечетных - {count_of_odd}')
    else:
        digit = number % 10
        if digit % 2 == 0:
            count_of_even += 1
        else:
            count_of_odd += 1
    return(even_odd(number // 10, count_of_even, count_of_odd))


number = input('Введите число: ')
try:
    number = int(number)
except ValueError:
    print('Ввели не число')
else:
    print(even_odd(number))